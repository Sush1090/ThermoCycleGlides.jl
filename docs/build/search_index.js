var documenterSearchIndex = {"docs":
[{"location":"reference/#References","page":"References","title":"References","text":"","category":"section"},{"location":"reference/#Contents","page":"References","title":"Contents","text":"","category":"section"},{"location":"reference/","page":"References","title":"References","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/#Index","page":"References","title":"Index","text":"","category":"section"},{"location":"reference/","page":"References","title":"References","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/#ThermoCycleGlides.ORC","page":"References","title":"ThermoCycleGlides.ORC","text":"ORC{T<:Real} <: ThermoCycleProblem\n\nDefines an Organic Rankine Cycle (ORC) problem with thermodynamic and design  parameters specified in Kelvin and dimensionless efficiencies.\n\nFields\n\nfluid::EoSModel: Equation of State (EoS) model representing the working fluid.\nz::AbstractVector{T}: Mole fraction composition vector of the working fluid.\nT_evap_in::T: Inlet temperature of the evaporator [K].\nT_evap_out::T: Outlet temperature of the evaporator [K].\nΔT_sh::T: Degree of superheating at the expander inlet [K].\nT_cond_in::T: Inlet temperature of the condenser [K].\nT_cond_out::T: Outlet temperature of the condenser [K].\nΔT_sc::T: Degree of subcooling at the pump inlet [K].\nη_pump::T: Isentropic efficiency of the pump [-].\nη_expander::T: Isentropic efficiency of the expander [-].\npp_evap::T: Minimum temperature difference (pinch point) at the evaporator [K].\npp_cond::T: Minimum temperature difference (pinch point) at the condenser [K].\n\n\n\n\n\n","category":"type"},{"location":"reference/#ThermoCycleGlides.ORCEconomizer","page":"References","title":"ThermoCycleGlides.ORCEconomizer","text":"    ORCEconomizer{T<:Real} <: ThermoCycleProblem\n\nDefines an Organic Rankine Cycle (ORC) configuration with an economiser (regenerative heat exchanger), extending the base ORC problem with a specified effectiveness.\n\nFields\n\norc::ORC{T}: Base ORC system definition containing the thermodynamic parameters.\nϵ::T: Effectiveness of the economiser (regenerator) [-].\n\n\n\n\n\n","category":"type"},{"location":"reference/#ThermoCycleGlides.SolutionState","page":"References","title":"ThermoCycleGlides.SolutionState","text":"SolutionState -  A struct to hold the solution state of the nonlinear solver.\n\nx::Vector{T}: The solution vector.\nf_calls::I: The number of function calls made during the solving process.\niterations::I: The number of iterations taken to converge.\nresiduals::Vector{T}: The residuals at the solution.\nlb::Vector{T}: The lower bounds used in the solver.\nub::Vector{T}: The upper bounds used in the solver.\nautodiff::Bool: A flag indicating whether automatic differentiation was used.\nfd_order::I: The order of finite difference used if autodiff is false.\nlenx::T: The final change in the solution vector.\nlenf::T: The final change in the residuals.\nsoltype::Symbol: A symbol indicating the type of cycle (:unknown,:subcritical,:transcritical). This will be updated with the cycle type after solving.\n\n\n\n\n\n","category":"type"},{"location":"reference/#ThermoCycleGlides.ThermoCycleParameters","page":"References","title":"ThermoCycleGlides.ThermoCycleParameters","text":"Struct for solver and system paramters     N -  hex discrtization (incase of mixtures)     internal_pinch - to check if pinch point was met in two-phase\n\n\n\n\n\n","category":"type"},{"location":"reference/#ThermoCycleGlides.COP-Tuple{ThermoCycleGlides.ThermoCycleProblem, SolutionState}","page":"References","title":"ThermoCycleGlides.COP","text":"COP(prob::ThermoCycleGlides.ThermoCycleProblem, sol::SolutionState) -> Float64\n\nComputes the coefficient of performance (COP) of a thermodynamic cycle given the  problem definition and its corresponding solution state.\n\nArguments\n\nprob::ThermoCycleGlides.ThermoCycleProblem: The thermodynamic cycle problem  containing fluid models, boundary conditions, and component parameters.\nsol::SolutionState: The solution state object containing the converged  state variables (x), residuals, and convergence information.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ThermoCycleGlides.generate_box_solve_bounds-Tuple{HeatPump}","page":"References","title":"ThermoCycleGlides.generate_box_solve_bounds","text":"generate_box_solve_bounds(prob::HeatPump) -> lb, ub Generates lower and upper bounds for the heat pump problem based on its parameters.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ThermoCycleGlides.optimize-Tuple{ThermoCycleGlides.ThermoCycleProblem, Metaheuristics.Algorithm}","page":"References","title":"ThermoCycleGlides.optimize","text":"optimize(prob::ThermoCycleProblem; kwargs...)\n\nIts goal is to find the optimal subcooling and superheating values that maximize the cycle performance (COP or ORC -efficiency).\n\nThis should return the optimized cycle struct and the result from Metaheuristics\n\n\n\n\n\n","category":"method"},{"location":"reference/#ThermoCycleGlides.plot_cycle-Tuple{HeatPump, AbstractVector}","page":"References","title":"ThermoCycleGlides.plot_cycle","text":"Plots TS diagram\n\n\n\n\n\n","category":"method"},{"location":"reference/#ThermoCycleGlides.power_ratings-Union{Tuple{T}, Tuple{HeatPump, AbstractVector{T}}} where T","page":"References","title":"ThermoCycleGlides.power_ratings","text":"Function that gives specific power ratings for HP by fixing outlet power of compressor to equal 1.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ThermoCycleGlides.power_ratings-Union{Tuple{T}, Tuple{HeatPumpRecuperator, AbstractVector{T}}} where T","page":"References","title":"ThermoCycleGlides.power_ratings","text":"Function that gives specific power ratings for HP by fixing outlet power of compressor to equal 1.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ThermoCycleGlides.power_ratings-Union{Tuple{T}, Tuple{ORC, AbstractVector{T}}} where T","page":"References","title":"ThermoCycleGlides.power_ratings","text":"Function that gives specific power ratings for ORC by fixing outlet power of expander to equal 1.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ThermoCycleGlides.show_parameters-Tuple{ORC}","page":"References","title":"ThermoCycleGlides.show_parameters","text":"show_parameters(prob::ORC) prints parameters in REPL\n\n\n\n\n\n","category":"method"},{"location":"reference/#ThermoCycleGlides.solve-Tuple{ThermoCycleGlides.ThermoCycleProblem}","page":"References","title":"ThermoCycleGlides.solve","text":"Solves for pressure values in HP and ORC cycles for the given glide and problem parameters. \nDefine those problems in the respective structs. \nFor now the default box-nonlinear solver is newton-raphson, but this can be changed to other solvers in the future.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ThermoCycleGlides.η-Tuple{ThermoCycleGlides.ThermoCycleProblem, SolutionState}","page":"References","title":"ThermoCycleGlides.η","text":"η(prob::ThermoCycleGlides.ThermoCycleProblem, sol::SolutionState) -> Float64\n\nComputes the thermal efficiency of a thermodynamic cycle given a problem definition  and its corresponding solution state.\n\nArguments\n\nprob::ThermoCycleGlides.ThermoCycleProblem: The thermodynamic cycle problem  containing fluid properties, boundary conditions, and component parameters.\nsol::SolutionState: The solution state object containing the converged  state variables (x), residuals, and convergence information.\n\nReturns\n\nFloat64: The computed cycle efficiency, defined as the ratio of net work  output to heat input.\n\nNotes\n\nThis method acts as a wrapper that extracts the solution vector x from  sol and calls the lower-level η(prob, x) implementation.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ThermoCycleGlides.η-Union{Tuple{T}, Tuple{ORC, AbstractVector{T}}} where T<:Real","page":"References","title":"ThermoCycleGlides.η","text":"p[1] -> condensor pressure p[2] -> evaporator pressure\n\n\n\n\n\n","category":"method"},{"location":"#Hi","page":"Home","title":"Hi","text":"","category":"section"}]
}
